{
  "hash": "e54c30b1cfa2bb475db16afff0513f52",
  "result": {
    "markdown": "# *High Dimensional Mediation*\n\n## *Set up project for High Dimensional Mediation Analysis*\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nLoading required package: MASS\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\nLoading required package: NMF\n\nLoading required package: registry\n\nLoading required package: rngtools\n\nLoading required package: cluster\n\nNMF - BioConductor layer [OK] | Shared memory capabilities [NO: bigmemory] | Cores 2/2\n\n  To enable shared memory capabilities, try: install.extras('\nNMF\n')\n\nLoading required package: mclust\n\nPackage 'mclust' version 6.0.0\nType 'citation(\"mclust\")' for citing this R package in publications.\n\n\nAttaching package: 'mclust'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\n\nLoading required package: InterSIM\n\nLoading required package: tools\n\nLoading required package: ade4\n\n\nAttaching package: 'ade4'\n\n\nThe following object is masked from 'package:BiocGenerics':\n\n    score\n\n\n\nAttaching package: 'GPArotation'\n\n\nThe following object is masked from 'package:NMF':\n\n    entropy\n\n\n\nAttaching package: 'MOFA2'\n\n\nThe following object is masked from 'package:NMF':\n\n    predict\n\n\nThe following object is masked from 'package:stats':\n\n    predict\n\n\nLoading required package: JADE\n\nLoading required package: fICA\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\nLoading required package: ncvreg\n\nLoading required package: glmnet\n\nLoading required package: Matrix\n\n\nAttaching package: 'Matrix'\n\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\n\nLoaded glmnet 4.1-7\n\n*************************************************************************************\n\nHIMA version 2.2.0\nTo access full functionality of HIMA, please make sure this version is current.\n\n\nCitation:\n  1. Zhang H, Zheng Y, Zhang Z, Gao T, Joyce B, Yoon G, Zhang W, Schwartz J,\n     Just A, Colicino E, Vokonas P, Zhao L, Lv J, Baccarelli A, Hou L, Liu L.\n     Estimating and Testing High-dimensional Mediation Effects in Epigenetic Studies.\n     Bioinformatics. 2016;32(20):3150-4.\n     PMID: 27357171; PMCID: PMC5048064.\n\n  2. Zhang H, Zheng Y, Hou L, Zheng C, Liu L.\n     Mediation Analysis for Survival Data with High-Dimensional Mediators.\n     Bioinformatics. 2021;37(21):3815-21.\n     PMID: 34343267. PMCID: PMC8570823.\n\n  3. Zhang H, Chen J, Feng Y, Wang C, Li H, Liu L. \n     Mediation effect selection in high-dimensional and compositional microbiome data.\n     Stat Med. 2021;40(4):885-96.\n     PMID: 33205470. PMCID: PMC7855955.\n\n\n*************************************************************************************\n\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n\nLoading required package: shape\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:MASS':\n\n    select\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\n\n\nAttaching package: 'psych'\n\n\nThe following object is masked from 'package:ncvreg':\n\n    AUC\n\n\nThe following objects are masked from 'package:GPArotation':\n\n    equamax, varimin\n\n\nThe following object is masked from 'package:InterSIM':\n\n    logit\n\n\nThe following object is masked from 'package:mclust':\n\n    sim\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n\n\nLoading required package: lavaan\n\nThis is lavaan 0.6-16\nlavaan is FREE software! Please report any bugs.\n\n\nAttaching package: 'lavaan'\n\n\nThe following object is masked from 'package:psych':\n\n    cor2cov\n\n\nLoading required package: e1071\n\nRegistered S3 methods overwritten by 'proxy':\n  method               from    \n  print.registry_field registry\n  print.registry_entry registry\n\n\nAttaching package: 'e1071'\n\n\nThe following object is masked from 'package:MOFA2':\n\n    impute\n\n\nLoading required package: OpenMx\n\nOpenMx may run faster if it is compiled to take advantage of multiple cores.\n\n\nAttaching package: 'OpenMx'\n\n\nThe following object is masked from 'package:psych':\n\n    tr\n\n\nThe following objects are masked from 'package:Matrix':\n\n    %&%, expm\n\n\nRegistered S3 method overwritten by 'modelr':\n  method            from \n  print.permutation RGCCA\n\n\nAttaching package: 'data.table'\n\n\nThe following objects are masked from 'package:reshape2':\n\n    dcast, melt\n\n\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\n\n\nAttaching package: 'boot'\n\n\nThe following object is masked from 'package:psych':\n\n    logit\n\n\nThe following object is masked from 'package:InterSIM':\n\n    logit\n\n\n\nAttaching package: 'htmlwidgets'\n\n\nThe following object is masked from 'package:networkD3':\n\n    JS\n```\n:::\n:::\n\n\n## *Early integration*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run Analysis\nresult_hima_early <- hima_early_integration(exposure = exposure,\n                                            outcome = outcome, \n                                            omics_lst = omics_lst, \n                                            covs = covs,\n                                            Y.family = \"gaussian\", \n                                            M.family = \"gaussian\")\n\n# Merge results with feature metadata \nresult_hima_early_fin <- result_hima_early %>%\n  tidylog::left_join(omics_names, by = \"ftr_name\") %>%\n  mutate(across(where(is.character), ~na_if(., \"\")))\n\n# Filter to significant features only and scale % total effect to 100\nresult_hima_early_fin <- result_hima_early_fin %>% \n  tidylog::filter(BH.FDR < 0.05) %>%\n  mutate(pte_early = 100*`% total effect`/sum(`% total effect`))\n```\n:::\n\n\n## *Intermediate Integration*\n\n1.  ***Regression 1 (linear regression):***\n\n\n    ```{=tex}\n    \\begin{equation}\n    m_i = a_0 + a_1 \\times x\n    \\label{eq:reg1}\n    \\end{equation}\n    ```\n\n    *Where:*\n\n    -   *(* $$x$$ *) is exposure.*\n    -   *(* $$m_i$$ *) is each mediator.*\n\n2.  ***Regression 2 (group lasso):***\n\n\n    ```{=tex}\n    \\begin{equation}\n    y = b_0 + b_1 \\times x + b_{2_i} \\times M\n    \\label{eq:reg2}\n    \\end{equation}\n    ```\n\n    *Where:*\n\n    -   *(* $$y$$ *) is the outcome.*\n    -   *(* $$x$$ *) is exposure.*\n    -   *(* $$M$$ *) is the mediator matrix with corresponding estimate (* $$b_{2_i}$$ *).*\n    -   *The bootstrapped standard error (se) of (* $$b_{2_i}$$ *) is used for calculating mediation confidence intervals.*\n\n3.  ***Calculate mediation confidence interval for mediator ( i ):***\n\n\n    ```{=tex}\n    \\begin{align}\n    \\alpha &= a_1 \\label{eq:alpha}\\\\\n    \\text{se of } \\alpha &= \\text{se of } a_1 \\label{eq:se_alpha}\\\\\n    \\beta &= b_{2_i} \\label{eq:beta}\\\\\n    \\text{se of } \\beta &= \\text{se of } b_{2_i} \\label{eq:se_beta}\n    \\end{align}\n    ```\n\n\n*Note: We would normally have n_boot higher (1000 or more), but here it is set to 12 to improve speed of the function.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run Analysis\nresult_hima_intermediate <- hima_intermediate_integration(\n  omics_lst = omics_lst,\n                                                          covs = covs,\n                                                          outcome = outcome,\n                                                          exposure = exposure,\n                                                          n_boot = 12,\n                                                          Y.family = \"gaussian\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStart estimating alpha:\nDone!\n```\n:::\n\n```{.r .cell-code}\n# Merge results with feature metadata \nresult_hima_intermediate_fin <- result_hima_intermediate %>%\n  dplyr::select(-omic_layer) %>%\n  tidylog::left_join(omics_names, by = \"ftr_name\") %>%\n  mutate(across(where(is.character), ~na_if(., \"\")))\n\n# Filter to significant only and scale % total effect to 100\nresult_hima_intermediate_fin <- result_hima_intermediate_fin %>% \n  tidylog::filter(sig_intermediate == 1) %>%\n  mutate(pte_intermediate = 100*pte_intermediate/sum(pte_intermediate))\n```\n:::\n\n\n## *Late integration*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run Analysis\nresult_hima_late <- hima_late_integration(exposure = exposure,\n                                          outcome = outcome, \n                                          omics_lst = omics_lst, \n                                          covs = covs, \n                                          Y.family = \"gaussian\", \n                                          M.family = \"gaussian\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmethylome start\nmethylome complete\ntranscriptome start\ntranscriptome complete\nmiRNA start\nmiRNA complete\nproteome start\nproteome complete\nmetabolome start\nmetabolome complete\n```\n:::\n\n```{.r .cell-code}\n# Merge results with feature metadata \nresult_hima_late_fin <- result_hima_late %>% \n  dplyr::select(-omic_layer) %>%\n  tidylog::left_join(omics_names, by = \"ftr_name\") %>%\n  mutate(across(where(is.character), ~na_if(., \"\")))\n\n# Filter to significant features only, scale % total effect to 100\nresult_hima_late_fin <- result_hima_late_fin %>% \n  tidylog::filter(BH.FDR < 0.05) %>%\n  mutate(pte_late = 100*`% total effect`/sum(`% total effect`))\n```\n:::\n\n\n## *Figures: High dimensional mediation plots.*\n\n### *Prepare data for figures.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nearly <- result_hima_early_fin %>%\n  mutate(sig_early = if_else(BH.FDR < 0.05, 1, 0)) %>%\n  select(ftr_name, 'alpha*beta', pte_early, alpha, beta, sig_early) %>%\n  rename(ie_early = 'alpha*beta', \n         alpha_early = alpha, \n         beta_early = beta)\n\nlate <- result_hima_late_fin %>%\n  mutate(sig_late = if_else(BH.FDR < 0.05, 1, 0)) %>%\n  select(ftr_name, 'alpha*beta', pte_late, alpha, beta, sig_late) %>%\n  rename(ie_late = 'alpha*beta', \n         alpha_late = alpha, \n         beta_late = beta)\n\n# Filter out effect estimate of 0\nintermediate <- result_hima_intermediate_fin %>%\n  tidylog::filter(s1 != 0) %>%\n  select(ftr_name, indirect, pte_intermediate, alpha, \n         beta_bootstrap,  sig_intermediate) %>%\n  rename(ie_intermediate = indirect, \n         alpha_intermediate = alpha, \n         beta_intermediate = beta_bootstrap)\n\n# Combine all results\nhigh_dim_res <- tidylog::full_join(early, late, by = \"ftr_name\") %>%\n  tidylog::full_join(intermediate, by = \"ftr_name\") %>%\n  mutate(omic_layer = get_omic_layer(ftr_name), \n         omic_layer = replace_na(omic_layer, \"Metabolome\"), \n         across(where(is.numeric), ~replace_na(., 0))) %>%  \n  rowwise() %>%\n  mutate(sum_pte = sum(c(pte_early + pte_late, pte_intermediate), \n                       na.rm = TRUE),\n         sum_ie = sum(c(ie_early + ie_late, ie_intermediate), \n                      na.rm = TRUE),\n         ftr_name = fct_reorder(ftr_name, sum_pte)) %>%\n  ungroup()\n\n# Pivot data longer\nhigh_dim_res_long <- high_dim_res %>%\n  pivot_longer(cols = c(ie_early:sig_intermediate), \n               names_to = c(\".value\", \"method\"), \n               names_sep = \"_\") %>%\n  arrange(ftr_name) %>%\n  mutate(method = str_to_title(method),\n         omic_layer = as.factor(omic_layer) %>%\n           fct_relevel(c(\"Methylation\", \n                         \"Transcriptome\", \n                         \"miRNA\", \n                         \"Proteins\")), \n         sig_chr = if_else(sig == 1, \"*\", \"\"))\n\n# Add names of features for plotting\nhigh_dim_res_fin <- high_dim_res_long %>%\n  tidylog::left_join(omics_names %>% dplyr::select(-omic_layer), by = \"ftr_name\")\n```\n:::\n\n\n### *Figure. Correlation plot*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select the unique features from high dimensional mediation results\nomics_df_subset <- omics_df %>%\n  select(unique(high_dim_res_fin$ftr_name)) \n\n# Create an annotation dataframe for the selected features\nannotation <- omics_names %>% \n  tidylog::filter(ftr_name %in% unique(high_dim_res_fin$ftr_name)) %>%\n  mutate(Type = get_omic_layer(ftr_name))\n\n# Rename columns of the omics dataframe using feature names meant for plots\nsetnames(omics_df_subset, \n         old = colnames(omics_df_subset), \n         new = annotation$ftr_name_for_plots)\nlength(unique(omics_names$ftr_name_for_plots))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 140\n```\n:::\n\n```{.r .cell-code}\n# Compute the correlation matrix for the omics dataframe\ncormat <- cor(omics_df_subset)\n\n# Create a heatmap of the correlation matrix using ComplexHeatmap package\n# The heatmap splits rows and columns based on the annotation types \np <- ComplexHeatmap::Heatmap(cormat, \n                             row_split = annotation$Type,\n                             column_split = annotation$Type,\n                             show_row_names = FALSE,\n                             show_column_names = FALSE, \n                             heatmap_legend_param = list(title = \"Correlation\"))\n\n# Extract the order of the features from the heatmap and combine into a single vector\nsuppressWarnings(feature_order <- c(ComplexHeatmap::row_order(p)$Methylation, \n                                    ComplexHeatmap::row_order(p)$Transcriptome))\n\n# Reorder feature names based on the feature order vector\nfeature_name_reorder <- colnames(omics_df_subset)[feature_order]\n\n# Recalculate correlation matrix for the reordered dataframe\ncorrelation_matrix <- omics_df_subset %>% \n  select(all_of(feature_name_reorder)) %>% \n  cor()\n\n# Function to get the lower triangle of the correlation matrix\nget_lower_tri<-function(cormat){\n  cormat[upper.tri(cormat)] <- NA\n  return(cormat)\n}\n\n# Transform correlation matrix into a data frame, excluding NA values and redundant pairs\ncorrelation_matrix_melt <- reshape2::melt(get_lower_tri(correlation_matrix), na.rm = TRUE)%>%\n  filter(Var1 != Var2) %>%\n  rename(correlation = value)\n\n# Generate a plot using ggplot to visualize the correlation matrix\n# The plot is a heatmap, with the fill color representing the correlation\np <- ggplot(correlation_matrix_melt,\n            aes(x=Var1,y=Var2,fill=correlation)) + \n  geom_tile(aes(fill = correlation), colour = \"white\") +\n  xlab(NULL)+\n  ylab(NULL) +\n  theme(\n    axis.text.x=element_text(angle = 90, hjust = 1, size = 10),\n    axis.line.x = element_blank(),\n    axis.line.y = element_blank(),\n    axis.text.y=element_text(angle = 0, hjust = 1, size = 10),\n    axis.ticks=element_blank(),\n    panel.border=element_blank(),\n    legend.position = \"bottom\",\n    legend.key.width = unit(1, 'cm'),\n    text = element_text(size = 12) ) +\n  scale_y_discrete(position = \"right\") +\n  scale_fill_gradient2(low  = \"blue\", mid  = \"white\", high = \"red\",\n                       midpoint = 0, limits = c(-1, 1))\n\np\n```\n\n::: {.cell-output-display}\n![](HIMA_files/figure-html/5. correlation plot-1.png){width=672}\n:::\n:::\n\n\n## *Figure: High dimensional mediation results*\n\n***High dimensional mediation with early (a), intermediate (b), and late (c) integration***\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pivot longer for figure\nhima_plot_dat <- high_dim_res_fin %>% \n  pivot_longer(cols = pte:beta) %>% \n  mutate(name = case_when(name == \"alpha\"~ \"Alpha\",\n                          name == \"beta\" ~ \"Beta\",\n                          name == \"pte\" ~ \"TE (%)\"))\n\n\nhima_plot <- function(data, method, \n                      legend.position = \"none\", \n                      axis.text.x = element_text(angle = 90, hjust = 1)){\n  data %>%\n    filter(method == method) %>% \n    ggplot(aes(x = ftr_name_for_plots, \n               y = value,\n               fill = omic_layer, \n               alpha = sig_chr,\n               label = sig_chr)) + \n    geom_bar(stat = \"identity\") +\n    facet_grid(name ~ omic_layer, \n               scales = \"free\",\n               space = \"free_x\") + \n    scale_fill_manual(values = c(sankey_colors$range[2], \n                                 sankey_colors$range[5], \n                                 sankey_colors$range[4], \n                                 sankey_colors$range[3], \n                                 sankey_colors$range[6])) +\n    scale_alpha_manual(values = c(.25, 1), guide = \"none\") + \n    geom_hline(yintercept = 0, linetype = 1, color = \"grey50\") + \n    ylab(NULL) + xlab(NULL) +\n    theme(\n      strip.background = element_blank(),\n      strip.text.x = element_blank(),\n      axis.text.x = axis.text.x,\n      legend.title = element_blank(), \n      legend.position = legend.position, # Place the legend at the bottom\n      legend.box = \"horizontal\", # Align the legend horizontally\n      legend.margin = margin(0, 0, 0, 0), # Remove margins around legend\n      legend.box.margin = margin(0, 0, 0, 0), # Adjust legend margin\n      legend.direction = \"horizontal\", # Align the legend horizontally\n      legend.justification = c(1, 0))\n}\n\n# Early integration Plot\nearly_plot <- hima_plot(hima_plot_dat, \n                        method = \"Early\",\n                        legend.position = \"none\", \n                        axis.text.x = element_blank())\n\n# Intermediate integration Plot\nintermediate_plot <- hima_plot(hima_plot_dat, \n                               method = \"Intermediate\",\n                               legend.position = \"none\", \n                               axis.text.x = element_blank())\n\n# Late integration Plot\nlate_plot <- hima_plot(hima_plot_dat,\n                       method = \"Late\",\n                       legend.position = \"bottom\")\n\n# Combine Plots\np <- plot_grid(NULL, early_plot, \n               NULL, intermediate_plot, \n               NULL, late_plot,\n               ncol = 1,\n               rel_heights = c(.03, 0.35, .03, 0.35, 0.03, 0.65),\n               labels = c(\"a) Early\", \"\",\"b) Intermediate\",\"\", \"c) Late\",\"\"))\np\n```\n\n::: {.cell-output-display}\n![](HIMA_files/figure-html/6. HIMA plot-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "HIMA_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}