# Lucid In Serial

```{r lucid in serial setup, include = FALSE, echo = FALSE}
source(fs::path(here::here(),"0_project_setup","libraries.R"))
source(fs::path(here::here(),"0_project_setup","directories.R"))
source(fs::path(here::here(),"0_project_setup","load_simu_data.R"))
source(fs::path(here::here(),"0_project_setup","functions","load_functions.R"))
source(fs::path(here::here(), 
                "0_project_setup", "functions", "lucid_reorder_plot_without_y.R"))
source(fs::path(here::here(), "0_project_setup", "functions","lucid_reorder_plot_without_y.R"))
source(fs::path(here::here(), "0_project_setup", "functions","LUCIDusM in Serial Sankey fxn.R"))

library(htmlwidgets)
options(knitr.table.format = "html")
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
```

```{r analysis data preparation lucid in serial}
meta_df <- data.frame(ftr_name = c(colnames(omics_lst$methylome),
                                   colnames(omics_lst$transcriptome),
                                   colnames(omics_lst$miRNA))) %>%
  mutate(omic_layer = get_omic_layer_lowercase(ftr_name) ) %>%
  tidylog::left_join(omics_names %>% dplyr::select(-omic_layer))  %>%
  select(ftr_name_for_plots, ftr_name, omic_layer) 


methylation_meta_df <- meta_df %>% filter(omic_layer == "methylome") %>% 
  mutate(ftr_name_for_plots =  
           case_when(ftr_name == "cg07385577" ~ "AJ011932.1_1",
                     ftr_name == "cg25823142" ~ "AJ011932.1_2",
                     TRUE ~ ftr_name_for_plots))
transcriptome_meta_df <- meta_df %>% filter(omic_layer == "transcriptome")
mirna_meta_df <- meta_df %>% filter(omic_layer == "mirna")


omics_lst_df <- purrr::map(omics_lst, ~as_tibble(.x, rownames = "name"))

setnames(omics_lst_df$methylome, 
         old = c(methylation_meta_df$ftr_name), 
         new = c(methylation_meta_df$ftr_name_for_plots))

setnames(omics_lst_df$transcriptome, 
         old = c(transcriptome_meta_df$ftr_name),
         new = c(transcriptome_meta_df$ftr_name_for_plots))

#setnames(omics_lst_df$miRNA, 
         #old = c(mirna_meta_df$ftr_name),
         #new = c(mirna_meta_df$ftr_name_for_plots))

## Extract omics layer dataframe-----
methylation <- omics_lst_df$methylome %>% column_to_rownames("name")
transcription <- omics_lst_df$transcriptome %>% column_to_rownames("name")
miRNA <- omics_lst_df$miRNA %>% column_to_rownames("name")
```

### Step 1. Hg + Methylation

**Exposure: Hg (Mercury)**

**Omics: Methylation (CpG)**

**Outcome: Randomly number**

**In LUCID function, use useY = FALSE**

**Output from Analysis 1: two Clusters of participants**

```{r LUCID model 1}
set.seed(100)
G_Hg = exposure %>% as.matrix()
Z_methy = methylation %>% as.matrix()
Z = list(as.matrix(methylation),as.matrix(transcription),as.matrix(miRNA))
Y_liv_inj = scale(outcome)

fit <- estimate_lucid(lucid_model = "serial",
              G = G_Hg,
              Z = Z,
              Y = Y_liv_inj, 
              CoY = covs,
              CoG = covs,
              K = list(2,2,2),
              useY = TRUE,
              init_par = "random",
              family = "normal", 
              Rho_Z_Mu = 10,
              Rho_Z_Cov = .3)

fit1 <- fit$submodel[[1]]
# Rename Exposure
fit1$var.names$Gnames[1] <- "Hg"
#fit1 <- reorder_lucid(fit1, c(2,1))
fit2 <- fit$submodel[[2]]
fit2$var.names$Gnames[1] <- "<b>Methylation\nProfile 1</b>"
fit3 <- fit$submodel[[3]]
fit3$var.names$Gnames[1] <- "<b>miRNA\nProfile 1</b>"
```

### Sankey Diagram

```{r Sankey Diagram lucid in serial, fig.height= 15, fig.width= 12}
col_pal <- RColorBrewer::brewer.pal(n = 8, name = "Dark2")
color_pal_sankey <- matrix(c("exposure", "red",
                               "lc",       "#b3d8ff",
                               "TC",      col_pal[2],
                               "CpG",       col_pal[1],
                               "miRNA",  col_pal[3],
                               "outcome",  "grey"), 
                             ncol = 2, byrow = TRUE) %>%
    as_tibble(.name_repair = "unique") %>% 
    janitor::clean_names() %>%
    dplyr::rename(group = x1, color = x2)
  
(p <- sankey_in_serial(fit1, 
                 fit2, 
                 fit3, 
                 color_pal_sankey,
                 text_size = 24))

# saveWidget(p, file = fs::path(dir_figs, "4_integrated_latent_unknown_clusters/lucid_in_serial_0725.html"))

```
