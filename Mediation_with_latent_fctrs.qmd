# Mediation with latent factrs {#sec-med_lf}

We define mediation with latent factors as a two step approach, in which we first perform dimensionality reduction on the omics data and then use the factors/clusters as latent mediator for the mediation analysis between the exposure and the outcome. 

```{r set up data, include = FALSE, echo = FALSE}
source(fs::path(here::here(),"project_setup","directories.R"))
source(fs::path(dir_proj, "libraries.R"))
source(fs::path(dir_proj, "load_simu_data.R"))
source(fs::path(dir_proj, "functions", "load_functions.R"))
source(fs::path(dir_proj, "functions","mediation_with_latent_fctrs_function.R"))
options(knitr.table.format = "html")
```


## *Early integration*

For early integration, we used principal component analysis (PCA) as a dimensionality reduction step and selected the top i principal components which explained >80% of the variance. Following the joint dimensionality reduction step, we used the r package HIMA [@RN33] to examine whether the variance components mediated associations of in utero mercury exposure with MAFLD. The full code for the `med_with_latent_fctrs_early_integration` function is provided in @sec-code_med_with_latent_fctrs_early.

```{r 1a. early integration analysis, message=FALSE}
result_med_with_latent_fctrs_early <-
  med_with_latent_fctrs_early_integration(exposure, outcome,
                                          omics_lst, covs = NULL, 
                                          Y.family = "gaussian",
                                          M.family = "gaussian",
                                          fdr.level = 0.05)
```

In this analysis,  principal components explained >80% of the variance in the combined omics datasets. Of these  components, `r nrow(result_med_with_latent_fctrs_early$result_hima_pca_early_sig)` significantly mediated the relationship between maternal mercury and childhood liver injury (@fig-lf_early). 

```{r 1b. early integration data processing, message=FALSE}
#| label: fig-lf_early
#| fig-cap: "Mediation analysis with latent factors and early integration identifies joing components which mediate the association between maternal mercury and childhood liver injury. Panel A shows the mediation effects, where Alpha represents the coefficient estimates of the exposure to the mediator, Beta indicates the coefficient estimates of the mediators to the outcome, and TE (%) represents the percent total effect mediated calculated as alpha*beta/gamma. Panel B shows the individual correlation between the omic feature and the joint component." 
#| fig-width: 4
#| fig-height: 10

# Panel A Bargraph of mediation effects of PC's --------------
pca_early_long <- result_med_with_latent_fctrs_early$result_hima_pca_early_sig%>%
  mutate(pc_named = str_replace(pc_num, "PC", "Joint Comp. "),
         pcs_ordered = forcats::fct_reorder(pc_named, `te_direction`)) %>%
  rename(Alpha = alpha, 
         Beta = beta,
         `TE (%)` = `% Total Effect scaled`) %>%
  pivot_longer(cols = c(Alpha, Beta, `TE (%)`))

# Plot 
panel_a_early <- ggplot(pca_early_long, aes(x = pcs_ordered, y = value)) +
  geom_bar(stat = "identity", fill = "grey50") + 
  geom_hline(yintercept = 0) +
  facet_grid(name ~ ., scales = "free", space = "free_x", switch = "y") + 
  ggh4x::facetted_pos_scales(
    y = list(name == "Alpha"  ~ scale_y_continuous(
      limits = c(-.45,.45), breaks = c(-0.4, 0, .4)),
      name == "Beta"   ~ scale_y_continuous(
        limits = c(-.45,.45), breaks = c(-0.4, 0, .4)),
      name == "TE (%)" ~ scale_y_continuous(
        limits = c(-1,55), n.breaks = 4))) + 
  theme(axis.title = element_blank(), 
        strip.placement = "outside",
        axis.text.x = element_blank(),
        strip.background = element_blank(),
        text = element_text(size = 15))

# Panel B: heatmap of correlation of features vs PC's --------------

# Select features for plots -------
## Select rows with values in the top 10 of their respective columns 
top <- apply(result_med_with_latent_fctrs_early$result_ftr_cor_sig_pcs_early %>% select(-omic, -omic_num) %>% column_to_rownames("feature"), 2, function(x) x %in% tail(sort(abs(x)), 10)) 

## Filter selected rows
ftr_cor_sig_pcs_top <- result_med_with_latent_fctrs_early$result_ftr_cor_sig_pcs_early[which(rowSums(top) > 0), ] 

# Pivot longer
ftr_early_pcs_long_top_ft <-
  ftr_cor_sig_pcs_top %>%
  pivot_longer(cols = all_of(result_med_with_latent_fctrs_early$result_hima_pca_early_sig$pc_num),
                 names_to = "pc_num",
                 values_to = "Correlation")
  
# Join with PCA long to get the ordered pcs
panel_b_dat_early_top_ft <- left_join(ftr_early_pcs_long_top_ft,
                                        pca_early_long %>%
                                          filter(name == "Alpha") %>%
                                          dplyr::select(pc_num, pcs_ordered))

# Plot
panel_b_early <- ggplot(data = panel_b_dat_early_top_ft,
                        aes(y = feature,
                            x = fct_rev(pcs_ordered), 
                            fill = Correlation)) +
  geom_tile(color = "white") +
  facet_grid(omic ~ ., scales = "free", space = "free") +
  scale_fill_gradient2(low  = "blue",
                       mid  = "white",
                       high = "red",
                       midpoint = 0,
                       limits = c(-1, 1),
                       breaks = c(-1, 0, 1),
                       na.value = "grey20") +
  theme(
    axis.text.x = element_text(size = 15,angle = 90, hjust = 1, vjust = .5),
    strip.text = element_blank(),
    axis.title = element_blank(), 
    axis.ticks.x = element_blank(),
    legend.position = "none",
    text = element_text(size = 20)) 

# Combine Figures 
cowplot::plot_grid(
  NULL, panel_a_early,  NULL, panel_b_early, 
  ncol = 1, align = "v", axis = "lr",
  rel_heights  = c(.05, .75, .1, 1.75),
  labels = c("a)","", "b) "))
```

## *Intermediate Integration*

The steps for intermediate integration start with performing a joint dimensionality reduction step using Joint and Individual Variance Explained (JIVE) [@RN18]. Following the joint dimensionality reduction step, we used the r package HIMA [@RN33] to examine whether the variance components mediated associations of in utero mercury exposure with MAFLD. 

### Conduct JIVE and Perform Mediation Analysis

#### Conduct JIVE
For this step, JIVE can estimate the optimal number of joint and individual ranks by changing the `method` argument in the function `jive`. For the simulated HELIX data, the optimal number, determined by setting `method = "perm"`, was 22 joint ranks and 6, 9, 5, 5, and 8 ranks for the methylome, transcriptome, miRNA, proteome, and metabolome, respectively.

#### Perform mediation analysis

In this analysis, 6 joint components, 1 transcriptome specific component significantly mediated the relationship between maternal mercury and childhood liver injury (@fig-lf_intermediate).The full code for the `med_with_latent_fctrs_intermediate_integration` function is provided in @sec-code_med_with_latent_fctrs_int. 

```{r JIVE mediation,message = FALSE, warning = FALSE, fig.height= 10, fig.width= 10}
result_med_with_latent_fctrs_JIVE <- med_with_latent_fctrs_intermediate_integration(exposure, outcome,
                                          omics_lst, covs = NULL, 
                                          Y.family = "gaussian",
                                          M.family = "gaussian",
                                          fdr.level = 0.05)

```

```{r JIVE figure,message = FALSE, warning = FALSE}
#| label: fig-lf_intermediate
#| fig-cap: "Mediation analysis with latent factors and intermediate integration identifies joint and individual variance componets which mediate the association between maternal mercury and childhood liver injury. Panel A shows the mediation effects, where Alpha represents the coefficient estimates of the exposure to the mediator, Beta indicates the coefficient estimates of the mediators to the outcome, and TE (%) represents the percent total effect mediated calculated as alpha*beta/gamma. Panel B shows the individual correlation between the omic feature and the joint and individual components." 
#| fig-width: 4
#| fig-height: 10

# Panel A: Bargraph of mediation effects of PC's --------------
result_hima_jive_long <- result_med_with_latent_fctrs_JIVE$result_hima_jive_sig %>%
  mutate(component = str_replace(component, "_", " ") %>% 
           toTitleCase(), 
         components_ord = forcats::fct_reorder(component, `te_direction`)) %>%
  rename(Alpha = alpha, 
         Beta = beta,
         `TE (%)` = `% Total Effect scaled`) %>%
  pivot_longer(cols = c(Alpha, Beta, `TE (%)`))

# Plot  
panel_a_jive <- ggplot(result_hima_jive_long, 
                     aes(x = components_ord, 
                         y = value)) +
   geom_bar(stat = "identity", fill = "grey50") + 
   geom_hline(yintercept = 0) +
   facet_grid(name ~ .,
              scales = "free",
              space = "free_x", switch = "y") + 
   # labs(y = NULL) +
   facetted_pos_scales(
     y = list(
       name == "Alpha"  ~ scale_y_continuous(
         limits = c(-.45,.45), breaks = c(-0.4, 0, .4)),
       name == "Beta"   ~ scale_y_continuous(
         limits = c(-.45,.45), breaks = c(-0.4, 0, .4)),
       name == "TE (%)" ~ scale_y_continuous(
         limits = c(-1,55), n.breaks = 4))) + 
   theme(axis.title = element_blank(), 
         title = element_text(hjust = 0),
         strip.placement = "outside",
         axis.text.y = element_text(size = 15),
         axis.text.x = element_blank(),
         strip.background = element_blank(),
         text = element_text(size = 15))

# Panel B: heatmap of correlation of features vs PC's --------------

# Select features for plots -------
# Select rows with values in the top 10 of their respective columns
top10 <- apply(result_med_with_latent_fctrs_JIVE$result_ftr_cor_sig_pcs_jive %>% select(-omic, -omic_num) %>% column_to_rownames("feature"), 2, function(x) x %in% tail(sort(abs(x)), 10))

ftr_cor_sig_pcs_top <- result_med_with_latent_fctrs_JIVE$result_ftr_cor_sig_pcs_jive[which(rowSums(top10) > 0), ]

# Pivot longer
ftr_jive_pcs_long_top_ft <-
  ftr_cor_sig_pcs_top %>%
  pivot_longer(cols = all_of(result_med_with_latent_fctrs_JIVE$result_hima_jive_sig$component),
                 names_to = "component",
                 values_to = "Correlation")

# Change features which are in wrong JIVE individual component to zero
panel_b_dat_jive_fin <- ftr_jive_pcs_long_top_ft %>%
  mutate(
    component = str_replace_all(component, "_", " ") %>% toTitleCase(),
    in_ind_omic = str_sub(component, 1, 5) == str_sub(omic, 1, 5),
    Correlation = ifelse(in_ind_omic | str_detect(component, "Joint"),
                          Correlation, NA)) %>%
  left_join(result_hima_jive_long %>% 
              filter(name == "Alpha") %>%
              dplyr::select(component,components_ord, ind_joint_num),
            by= "component",
            relationship = "many-to-many")
# Plot
panel_b_jive <- ggplot(data = panel_b_dat_jive_fin,
                        aes(y = feature,
                            x = components_ord, 
                            fill = Correlation)) +
  geom_tile(color = "white") +
  facet_grid(omic ~ ., scales = "free", space = "free") +
  scale_fill_gradient2(low  = "blue",
                       mid  = "white",
                       high = "red",
                       midpoint = 0,
                       limits = c(-1, 1),
                       breaks = c(-1, 0, 1),
                       na.value = "grey") +
  theme(
    axis.text.x = element_text(size = 15,angle = 90, hjust = 1, vjust = .5),
    strip.text = element_blank(),
    axis.title = element_blank(), 
    axis.ticks.x = element_blank(),
    legend.position = "none",
    text = element_text(size = 20)) 

# Combine Figures 
cowplot::plot_grid(
  NULL, panel_a_jive,  NULL, panel_b_jive, 
  ncol = 1, align = "v", axis = "lr",
  rel_heights  = c(.05, .75, .1, 1.75),
  labels = c("a)","", "b) "))  
```

## *Late integration*

For late integration, we used principal component analysis (PCA) as a dimensionality reduction step on each omics layer separately, and selected the top i principal components which explained >80% of the variance. Following the dimensionality reduction step, we used the r package HIMA [@RN33]  to examine whether the variance components mediated associations of in utero mercury exposure with MAFLD. The full code for the `med_with_latent_fctrs_late_integration` function is provided in @sec-code_med_with_latent_fctrs_late.

```{r pca late integration, message = FALSE, warning = FALSE}
result_med_with_latent_fctrs_late <-
  med_with_latent_fctrs_late_integration(exposure, outcome,
                                          omics_lst, covs = NULL, 
                                          Y.family = "gaussian",
                                          M.family = "gaussian",
                                          fdr.level = 0.05)
```

This analysis identified 2 methylated CpG sites, 1 miRNA, 1 protein and 2 expressed gene transcript clutesrs significantly mediated the association between mercury and MAFLD (@fig-lf_late).

```{r figs pca late int, message = FALSE, warning = FALSE}
#| label: fig-lf_late
#| fig-cap: "Mediation analysis with latent factors and late integration identifies features in each omics layer individually which mediates the association between maternal mercury and childhood liver injury. Panel A shows the mediation effects, where Alpha represents the coefficient estimates of the exposure to the mediator, Beta indicates the coefficient estimates of the mediators to the outcome, and TE (%) represents the percent total effect mediated calculated as alpha*beta/gamma. Panel B shows the individual correlation between the omic feature and components." 
#| fig-width: 4
#| fig-height: 10
#| 
# i. Data: Panel A Bargraph of mediation effects of PC's --------------
pca_late_long <- result_med_with_latent_fctrs_late$result_hima_late_sig %>%
  mutate(pcs_ordered = forcats::fct_reorder(omic_pc, `te_direction`)) %>%
  dplyr::select(multiomic_mthd, omic_pc, omic_layer, pc_num, pcs_ordered,
                alpha, beta, `% Total Effect scaled`) %>%
  rename(Alpha = alpha, 
         Beta = beta,
         `TE (%)` = `% Total Effect scaled`) %>%
  pivot_longer(cols = c(Alpha, Beta, `TE (%)`)) %>%
  mutate(omic_num = get_omic_layer_numeric(omic_layer))

# Plot 
pan_a_late <- ggplot(pca_late_long, aes(x = pcs_ordered, y = value)) +
  geom_bar(stat = "identity", fill = "grey50") + 
  geom_hline(yintercept = 0) +
  facet_grid(name ~ omic_num, scales = "free", space = "free_x", switch = "y") + 
  ggh4x::facetted_pos_scales(
    y = list(name == "Alpha"  ~ scale_y_continuous(
      limits = c(-.45,.45), breaks = c(-0.4, 0, .4)),
      name == "Beta"   ~ scale_y_continuous(
        limits = c(-.45,.45), breaks = c(-0.4, 0, .4)),
      name == "TE (%)" ~ scale_y_continuous(
        limits = c(-1,55), n.breaks = 4))) + 
  theme(axis.title = element_blank(), 
        strip.placement = "outside",
        strip.text = element_blank(),
        axis.text.x = element_blank(),
        strip.background = element_blank(),
        text = element_text(size = 15))

# ii. Data: Panel B: heatmap of correlation of features vs PC's-----
# Select features for plots -------
# Select rows with values in the top 10 of their respective columns
top_late_int <- apply(result_med_with_latent_fctrs_late$result_ftr_cor_sig_pcs_late %>% select(-feature,-omic, -omic_num) %>% janitor::remove_empty(which = "rows"), 2,
                      function(x) x %in% tail(sort(abs(x)), 10))
selected_rows <- which(rowSums(top_late_int, na.rm = TRUE) > 0)

ftr_cor_sig_pcs_late <- result_med_with_latent_fctrs_late$result_ftr_cor_sig_pcs_late[selected_rows, ]

# Pivot longer
ftr_late_pcs_long_top_ft  <-  pivot_longer(ftr_cor_sig_pcs_late, 
                                       cols = all_of(result_med_with_latent_fctrs_late$result_hima_late_sig$pc_num), 
                                       names_to = "pc_num", 
                                       values_to = "Correlation") 

# Join with PCA long to get the ordered pcs 
panel_b_dat_late_top <- left_join(ftr_late_pcs_long_top_ft, 
                                   pca_late_long %>%
                                     filter(name == "Alpha") %>%
                                     dplyr::select(pc_num, pcs_ordered), 
                                   by = "pc_num") %>%
  mutate(omic_num2 = get_omic_layer_numeric(pc_num))

# Plot
panel_b_late <- ggplot(data = panel_b_dat_late_top,
                        aes(y = feature,
                            x = pcs_ordered, 
                            fill = Correlation)) + 
  geom_tile(color = "white") +
  facet_grid(omic_num ~ omic_num2, scales = "free", space = "free") +
  scale_fill_gradient2(low  = "blue",
                       mid  = "white",
                       high = "red",
                       midpoint = 0,
                       limits = c(-1, 1),
                       breaks = c(-1, 0, 1),
                       na.value = "grey") +
  theme(
    axis.text.x = element_text(size = 15,angle = 90, hjust = 1, vjust = .5),
    strip.text = element_blank(),
    axis.title = element_blank(), 
    axis.ticks.x = element_blank(),
    legend.position = "none",
    text = element_text(size = 20)) 

# Combine Figures 
cowplot::plot_grid(
  NULL, pan_a_late,  NULL, panel_b_late, 
  ncol = 1, align = "v", axis = "lr",
  rel_heights  = c(.05, .75, .1, 1.75),
  labels = c("a)","", "b) "))
```

### Pathway Analysis.

Following this analysis, you can use the correlation p-values to perform pathway analysis with appropriate pathway analysis software.


## Alternate Approaches

```{r}
# library(IntNMF)
# library(omicade4)
# library(MOFA2)
# library(tensorBSS)
# library(RGCCA)
```
