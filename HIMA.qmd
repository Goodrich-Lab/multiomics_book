# High Dimensional Mediation {#sec-HIMA}

## Set up project for High Dimensional Mediation Analysis

```{r 0. setup, include = TRUE, echo = TRUE, message=FALSE}
source(fs::path(here::here(),"project_setup","directories.R"))
source(fs::path(dir_proj,"libraries.R"))

source(fs::path(dir_proj, "load_simu_data.R"))
source(fs::path(dir_proj, "functions","load_functions.R"))
source(fs::path(dir_proj, "functions", "hima_functions.R"))

options(knitr.table.format = "html")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```

## *Early integration*

High dimensional mediation with early multiomic integration (@fig-1, panel a) identified differentially methylated CpG sites, gene transcript clusters, metabolites, and proteins which mediated associations of prenatal mercury with MAFLD risk in adolescents (@fig-hima_early). Combining all omics layers before analysis identifies the strongest mediating feature across all omics layers without accounting for the differences in underlying correlation structure. For this analysis, we used High Dimensional Mediation Analysis (HIMA), a penalization-based mediation method implemented in the R package HIMA [@RN33]. The full code for the `hima_early_integration` function is provided in @sec-code_hima_early.

```{r 1. early integration}
#| label: fig-hima_early
#| fig-cap: "High dimensional mediation analysis with early integration and multiple omic layers identifies individual molecular features linking maternal mercury with childhood liver injury. Alpha represents the coefficient estimates of the exposure to the mediator, Beta indicates the coefficient estimates of the mediators to the outcome, and TE (%) represents the percent total effect mediated calculated as alpha*beta/gamma." 

# Run Analysis
result_hima_early <- hima_early_integration(exposure = exposure,
                                            outcome = outcome, 
                                            omics_lst = omics_lst, 
                                            covs = covs,
                                            Y.family = "gaussian", 
                                            M.family = "gaussian")

# Merge results with feature metadata 
result_hima_early_fin <- result_hima_early %>%
  mutate(across(where(is.character), ~na_if(., "")), 
         omic_layer = get_omic_layer(ftr_name))

# Filter to significant features only and scale % total effect to 100
result_hima_early_fin <- result_hima_early_fin %>% 
  tidylog::filter(BH.FDR < 0.05) %>%
  mutate(pte = 100*`% total effect`/sum(`% total effect`), 
         sig = if_else(BH.FDR < 0.05, 1, 0))

# Format for figures
early <- result_hima_early_fin %>%
  dplyr::select(ftr_name, 'alpha*beta', pte, alpha, beta, sig) %>%
  mutate(omic_layer = get_omic_layer(ftr_name)) %>%
  rename(ie = 'alpha*beta', 
         `TE (%)` = pte)

# Pivot longer for figure
early_long <- early %>% 
  pivot_longer(cols = c(`TE (%)`:beta), 
               names_to = "name") %>%
  mutate(name = factor(name, levels = c("alpha", "beta", "TE (%)")))

# Plot features
ggplot(early_long, 
       aes(x = ftr_name, 
           y = value,
           fill = omic_layer)) + 
  geom_bar(stat = "identity") +
  facet_grid(name ~ omic_layer, 
             scales = "free",
             space = "free_x") +
  scale_fill_brewer(type = "qual", palette = 2) +
  geom_hline(yintercept = 0, linetype = 1, color = "grey50") + 
  ylab(NULL) + xlab(NULL) +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_blank(),
    axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5),
    legend.title = element_blank(), 
    legend.position = "bottom", 
    legend.justification = c(1, 0))
```

## *Intermediate Integration*

High dimensional mediation with intermediate multiomic integration (@fig-1, panel b)  identified differentially methylated CpG sites, gene transcript clusters, and miRNA which mediated associations of prenatal mercury with MAFLD risk in adolescents (@fig-hima_int). Combining all omics layers before analysis identifies the strongest mediating feature across all omics layers without accounting for the differences in underlying correlation structure. 

For this analysis, we use a novel two-step approach that incorporates feature level metadata to inform on feature selection using xtune [@RN50], an approach that allows for feature-specific penalty parameters and, in this example, performs a group-lasso-type shrinkage within each omic dataset. This analysis is similar in theory to HIMA, with the difference being that for this method the penalization can vary across each of the omic layers. This analysis was based on the product of coefficients method for mediation and was performed in three steps:

1.  ***Regression 1 (linear regression):***

First, we performed independent linear regression models for all exposure-mediator associations to get the exposure mediator coefficient:  

```{=tex}
\begin{equation}
m_i = a_0 + a_1 \times x
\label{eq:reg1}
\end{equation}
```
|    Where $x$ is the exposure and $m_i$ is each mediator.


2.  ***Regression 2 (group lasso):***

Second, we performed a single group lasso regression for the mediator outcome associations, adjusting for the exposure, using the R package xtune [@RN51]. This step provided coefficients for each of the mediator outcome associations. We used bootstrapping to obtain the standard error of the coefficients from the group lasso regression for each of the mediator coefficients.  

```{=tex}
\begin{equation}
y = b_0 + b_1 \times x + b_{2_i} \times M
\label{eq:reg2}
\end{equation}
```
|    Where $y$ is the outcome, $x$ is the exposure, $M$ is the mediator matrix with corresponding estimate $b_{2_i}$. The bootstrapped standard error (se) of $b_{2_i}$ is used for calculating mediation confidence intervals.  


3.  ***Calculate mediation confidence interval for mediator ( i ):***

Finally, for each omic feature, we calculated the mediation effect and 95% confidence intervals using the R package RMediation, which is based on the distribution-of-the-product method [@RN52].

```{=tex}
\begin{align}
\alpha &= a_1 \label{eq:alpha}\\
\text{se of } \alpha &= \text{se of } a_1 \label{eq:se_alpha}\\
\beta &= b_{2_i} \label{eq:beta}\\
\text{se of } \beta &= \text{se of } b_{2_i} \label{eq:se_beta}
\end{align}
```

The full code for the `hima_early_integration` function is provided in {#sec-code_hima_int}. *Note: For the actual analysis, we would normally set n_boot to a higher value (1000 or more). In the example code, it is set to 12 to improve the speed of the function.*

```{r 2. intermediate integration analysis, cache=TRUE}
#| label: fig-hima_int
#| fig-cap: "High dimensional mediation analysis with intermediate integration and multiple omic layers identifies individual molecular features linking maternal mercury with childhood liver injury. Alpha represents the coefficient estimates of the exposure to the mediator, Beta indicates the coefficient estimates of the mediators to the outcome, and TE (%) represents the percent total effect mediated calculated as alpha*beta/gamma." 

# Run Analysis
result_hima_intermediate <- hima_intermediate_integration(
  omics_lst = omics_lst,
  covs = covs,
  outcome = outcome,
  exposure = exposure,
  n_boot = 12,
  Y.family = "gaussian")

# Merge results with feature metadata 
result_hima_intermediate_fin <- result_hima_intermediate %>%
  mutate(across(where(is.character), ~na_if(., "")),
         omic_layer = get_omic_layer(ftr_name))

# Filter to significant features only and scale % total effect to 100
result_hima_intermediate_fin <- result_hima_intermediate_fin %>% 
  filter(sig == 1) %>%
  mutate(pte = 100*pte/sum(pte))

# Format for figure
intermediate <- result_hima_intermediate_fin %>%
  dplyr::select(ftr_name, indirect, pte, alpha, beta_bootstrap, sig) %>%
  mutate(omic_layer = get_omic_layer(ftr_name)) %>%
  rename(ie = indirect, 
         beta = beta_bootstrap, 
         `TE (%)` = pte) 

# Pivot longer for figure
intermediate_long <- intermediate %>% 
  pivot_longer(cols = c(`TE (%)`:beta), 
               names_to = "name") %>%
  mutate(name = factor(name, levels = c("alpha", "beta", "TE (%)")))

# Plot features
ggplot(intermediate_long, 
       aes(x = fct_inorder(ftr_name), 
           y = value,
           fill = omic_layer)) + 
  geom_bar(stat = "identity") +
  facet_grid(name ~ omic_layer, 
             scales = "free",
             space = "free_x") +
  scale_fill_brewer(type = "qual", palette = 2) +
  geom_hline(yintercept = 0, linetype = 1, color = "grey50") + 
  ylab(NULL) + xlab(NULL) +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_blank(),
    axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5),
    legend.title = element_blank(), 
    legend.position = "bottom", # Place the legend at the bottom
    legend.justification = c(1, 0))
```


## *Late integration*

High dimensional mediation with late multiomic integration (@fig-1, panel c) identified differentially methylated CpG sites, gene transcript clusters, and miRNA which mediated associations of prenatal mercury with MAFLD risk in adolescents (@fig-hima_late). High dimensional mediation with late multiomic integration differs from the early and intermediate integration in that each omics layer is analyzed individually. Thus, this approach does not condition on features within the other omics layers in the analysis.  

Combining all omics layers before analysis identifies the strongest mediating feature across all omics layers without accounting for the differences in underlying correlation structure. For this analysis, we used High Dimensional Mediation Analysis (HIMA), a penalization-based mediation method implemented in the R package HIMA [@RN33]. 



```{r 3. late integration analysis}
#| label: fig-hima_late
#| fig-cap: "High dimensional mediation analysis with late integration and multiple omic layers identifies individual molecular features linking maternal mercury with childhood liver injury. Alpha represents the coefficient estimates of the exposure to the mediator, Beta indicates the coefficient estimates of the mediators to the outcome, and TE (%) represents the percent total effect mediated calculated as alpha*beta/gamma." 
#| 

# Run Analysis
result_hima_late <- hima_late_integration(exposure = exposure,
                                          outcome = outcome, 
                                          omics_lst = omics_lst, 
                                          covs = covs, 
                                          Y.family = "gaussian", 
                                          M.family = "gaussian")

# Merge results with feature metadata 
result_hima_late_fin <- result_hima_late %>% 
  mutate(across(where(is.character), ~na_if(., "")), 
         omic_layer = get_omic_layer(ftr_name))

# Filter to significant features only, scale % total effect to 100
result_hima_late_fin <- result_hima_late_fin %>% 
  tidylog::filter(BH.FDR < 0.05) %>%
  mutate(pte = 100*`% total effect`/sum(`% total effect`), 
         sig = if_else(BH.FDR < 0.05, 1, 0))

# Format for figure
late <- result_hima_late_fin %>%
  dplyr::select(ftr_name, 'alpha*beta', pte, alpha, beta, sig) %>%
  mutate(omic_layer = get_omic_layer(ftr_name)) %>%
  rename(ie = 'alpha*beta', 
         `TE (%)` = pte)


# Pivot longer for figure
late_long <- late %>% 
  pivot_longer(cols = c(`TE (%)`:beta), 
               names_to = "name") %>%
  mutate(name = factor(name, levels = c("alpha", "beta", "TE (%)")))

# Plot features
ggplot(late_long, 
       aes(x = ftr_name, 
           y = value,
           fill = omic_layer)) + 
  geom_bar(stat = "identity") +
  facet_grid(name ~ omic_layer, 
             scales = "free",
             space = "free_x") +
  scale_fill_brewer(type = "qual", palette = 2) +
  geom_hline(yintercept = 0, linetype = 1, color = "grey50") + 
  ylab(NULL) + xlab(NULL) +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_blank(),
    axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5),
    legend.title = element_blank(), 
    legend.position = "bottom", 
    legend.justification = c(1, 0))
```

